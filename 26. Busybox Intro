Busybox - tool for creating customized File System

-It enables to create customized file system that meets your resource requirements.
-can fit your FS into limited memory space
-unwanted features can be removed 
-can significantly reduce the memory consumed by various commands by merging all the Linux commands in one single binary.

-In Ubuntu PC, all commands together consume more than 200MB. (/bin + /sbin + /usr/bin + /usr/sbin)
-Busybox supports most of the commands that you can find in /bin and /sbin of your PC with very minimal memory footprint.

-Busybox has only one single executable binary called "busybox" - contains support for all the commands
-implemented like a switch case of commands



From website:
BusyBox combines tiny versions of many common UNIX utilities into a single small executable. It provides replacements for most of the utilities you usually find in GNU fileutils, shellutils, etc. The utilities in BusyBox generally have fewer options than their full-featured GNU cousins; however, the options that are included provide the expected functionality and behave very much like their GNU counterparts. BusyBox provides a fairly complete environment for any small or embedded system.

BusyBox has been written with size-optimization and limited resources in mind. It is also extremely modular so you can easily include or exclude commands (or features) at compile time. This makes it easy to customize your embedded systems. To create a working system, just add some device nodes in /dev, a few configuration files in /etc, and a Linux kernel.
